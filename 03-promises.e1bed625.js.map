{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACAD,EAAAE,OAAOC,KAAK,CACVC,MAAO,QACPC,SAAU,YACVC,SAAU,OACVC,QAAS,GACTC,QAAS,MAGX,IAAMC,EAAUC,SAASC,cAAc,SAqBvC,SAASC,EAAcP,EAAUQ,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEb,WAAUQ,UAEpBM,EAAO,CAAEd,WAAUQ,YAEpBA,MAIP,SAASQ,EAAYC,G,IAAEjB,EAAFiB,EAAEjB,SAAUQ,EAAZS,EAAYT,MAC/Bb,EAAAE,OAAOqB,QAAQ,uBAAwCC,OAAfnB,EAAS,QAAYmB,OAANX,EAAM,OAG/D,SAASY,EAAWH,G,IAAEjB,EAAFiB,EAAEjB,SAAUQ,EAAZS,EAAYT,MAC9Bb,EAAAE,OAAOwB,QAAQ,sBAAqCF,OAAfnB,EAAS,QAAYmB,OAANX,EAAM,OAG5D,SAASc,IACP,MAAO,CACLd,MAAOe,OAAOnB,EAAQI,MAAMgB,OAC5BC,KAAMF,OAAOnB,EAAQqB,KAAKD,OAC1BE,OAAQH,OAAOnB,EAAQsB,OAAOF,QA5ClCpB,EAAQuB,iBAAiB,UAGzB,SAAsBC,GACpBA,EAAMC,iBAEN,IAA8BC,EAAAR,IAAxBd,EAAwBsB,EAAxBtB,MAAOkB,EAAiBI,EAAjBJ,OAAQD,EAASK,EAATL,KAErBV,YAAW,WACT,IAAK,IAAIgB,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAChCxB,EAAcwB,EAAGvB,GAAOwB,KAAKhB,GAAaiB,MAAMb,GAEhDZ,GAASiB,IAEVjB,GAmCHJ,EAAQ8B,WAhDV9B,EAAQuB,iBAAiB,QAASL,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nNotify.init({\n  width: '250px',\n  position: 'right-top',\n  distance: '10px',\n  opacity: 0.8,\n  timeout: 2000,\n});\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onFormSubmit);\nformRef.addEventListener('input', getFormValues);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let { delay, amount, step } = getFormValues();\n\n  setTimeout(() => {\n    for (let i = 1; i <= amount; i += 1) {\n      createPromise(i, delay).then(onFulfilled).catch(onRejected);\n\n      delay += step;\n    }\n  }, delay);\n\n  resetFormValues();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.5;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFulfilled({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onRejected({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction getFormValues() {\n  return {\n    delay: Number(formRef.delay.value),\n    step: Number(formRef.step.value),\n    amount: Number(formRef.amount.value),\n  };\n}\n\nfunction resetFormValues() {\n  formRef.reset();\n}\n"],"names":["$h6c0i","parcelRequire","Notify","init","width","position","distance","opacity","timeout","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$onFulfilled","param","success","concat","$ce04d3a99e08e73b$var$onRejected","failure","$ce04d3a99e08e73b$var$getFormValues","Number","value","step","amount","addEventListener","event","preventDefault","ref","i","then","catch","reset"],"version":3,"file":"03-promises.e1bed625.js.map"}